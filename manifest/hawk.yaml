apiVersion: v1
kind: Namespace
metadata:
  name: hawk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hawk-config
  namespace: hawk
data:
  MONGODB_CONNECTION_STRING: mongodb://hawk-db:27017/
  REACT_APP_API_BASE_URL: http://<HOST_IP>:30051
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hawk-service-account
  namespace: hawk
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hawk-role
  namespace: hawk
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "configmaps"]
  verbs: ["get", "watch", "list", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hawk-role-binding
  namespace: hawk
subjects:
- kind: ServiceAccount
  name: hawk-service-account
  namespace: hawk
roleRef:
  kind: Role
  name: hawk-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hawk-db-pvc
  namespace: hawk
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hawk-db
  namespace: hawk
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: hawk-db
  template:
    metadata:
      name: hawk-db
      namespace: hawk
      labels:
        app: hawk-db
    spec:
      containers:
      - name: hawk-db-container
        image: mongo:4
        imagePullPolicy: Always
        volumeMounts:
        - name: vol
          mountPath: /data/db
      volumes:
      - name: vol
        persistentVolumeClaim:
          claimName: hawk-db-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hawk-app-frontend
  namespace: hawk
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: hawk-app-frontend
  template:
    metadata:
      name: hawk-app-frontend
      namespace: hawk
      labels:
        app: hawk-app-frontend
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: hawk-app-frontend-container
        image: ghcr.io/m4rc02u1f4a4/hawk-frontend:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: hawk-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hawk-app-backend
  namespace: hawk
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: hawk-app-backend
  template:
    metadata:
      name: hawk-app-backend
      namespace: hawk
      labels:
        app: hawk-app-backend
    spec:
      serviceAccountName: hawk-service-account
      terminationGracePeriodSeconds: 5
      containers:
      - name: hawk-app-backend-container
        image: ghcr.io/m4rc02u1f4a4/hawk-backend:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: hawk-config
---
apiVersion: v1
kind: Service
metadata:
  name: hawk-db
  namespace: hawk
spec:
  ports:
  - name: hawk-db
    targetPort: 27017
    port: 27017
  selector:
    app: hawk-db
---
apiVersion: v1
kind: Service
metadata:
  name: hawk-db-node
  namespace: hawk
spec:
  type: NodePort
  ports:
  - name: hawk-db-node
    targetPort: 27017
    port: 27017
    nodePort: 30017
  selector:
    app: hawk-db
---
apiVersion: v1
kind: Service
metadata:
  name: hawk-app-frontend-node
  namespace: hawk
spec:
  type: NodePort
  ports:
  - name: hawk-app-frontend-node
    targetPort: 8080
    port: 8080
    nodePort: 30080
  selector:
    app: hawk-app-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: hawk-app-backend-node
  namespace: hawk
spec:
  type: NodePort
  ports:
  - name: hawk-app-backend-node
    targetPort: 5001
    port: 5001
    nodePort: 30051
  selector:
    app: hawk-app-backend